using Microsoft.Extensions.Options;

namespace EFSharpGen.Generators.Configurations;

/// <summary>
/// A service to generate configuration code files.
/// </summary>
/// <param name="appContext">The application context.</param>
/// <param name="options">The application options.</param>
/// <param name="codeCombiner">A service to combine pieces of code generated by
/// the provided code generators.</param>
/// <param name="fileCreator">A service to create a file after its content is
/// generated.</param>
/// <param name="autoGeneratedTagCodeGenerator">A service to get the
/// &lt;auto-generated&gt; tag.</param>
/// <param name="usingCodeGenerator">A service to generate the code for the
/// usings of a configuration.</param>
/// <param name="namespaceCodeGenerator">A service to generate the code for the
/// namespace of an entity.</param>
/// <param name="classDeclarationCodeGenerator">A service to generate the code
/// for the class declaration of an entity.</param>
/// <param name="configureMethodDeclarationCodeGenerator">A service to generate
/// the code for the Configure method declaration of a configuration.</param>
/// <param name="tableCodeGenerator">A service to generate the code for the table
/// configuration.</param>
/// <param name="enumConstraintCodeGenerator">A service to generate the code for
/// enum constraints configuration.</param>
/// <param name="primaryKeyCodeGenerator">A service to generate the code for the
/// primary key configuration.</param>
public class ConfigurationFileGenerator(
    IAppContext appContext,
    IOptions<Options> options,
    ICodeCombiner codeCombiner,
    IFileCreator fileCreator,
    IAutoGeneratedTagCodeGenerator autoGeneratedTagCodeGenerator,
    IConfigurationUsingCodeGenerator usingCodeGenerator,
    IConfigurationNamespaceCodeGenerator namespaceCodeGenerator,
    IConfigurationClassDeclarationCodeGenerator classDeclarationCodeGenerator,
    IConfigurationConfigureMethodDeclarationCodeGenerator configureMethodDeclarationCodeGenerator,
    IConfigurationTableCodeGenerator tableCodeGenerator,
    IConfigurationEnumConstraintCodeGenerator enumConstraintCodeGenerator,
    IConfigurationPrimaryKeyCodeGenerator primaryKeyCodeGenerator) :
    IFileGenerator
{
    /// <summary>
    /// Executes the generation of the code files.
    /// </summary>
    public virtual void GenerateFiles()
    {
        appContext.Schema.Entities.ForEach(e =>
        {
            var code = codeCombiner.CombineCode(e,
                autoGeneratedTagCodeGenerator,
                usingCodeGenerator,
                namespaceCodeGenerator,
                classDeclarationCodeGenerator,
                configureMethodDeclarationCodeGenerator,
                tableCodeGenerator,
                enumConstraintCodeGenerator,
                primaryKeyCodeGenerator);

            fileCreator.CreateFile(
                options.Value.ConfigurationsPath, e.Name + "Configuration.cs", code);
        });
    }
}
