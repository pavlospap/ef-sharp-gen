using Microsoft.Extensions.Options;

namespace EFSharpGen.Generators.Entities;

/// <summary>
/// A service to generate entity code files.
/// </summary>
/// <param name="appContext">The application context.</param>
/// <param name="options">The application options.</param>
/// <param name="codeCombiner">A service to combine pieces of code generated by
/// the provided code generators.</param>
/// <param name="fileCreator">A service to create a file after its content is
/// generated.</param>
/// <param name="autoGeneratedTagCodeGenerator">A service to get the
/// &lt;auto-generated&gt; tag.</param>
/// <param name="directiveCodeGenerator">A service to generate the code for the
/// directives of an entity.</param>
/// <param name="usingCodeGenerator">A service to generate the code for the
/// usings of an entity.</param>
/// <param name="namespaceCodeGenerator">A service to generate the code for the
/// namespace of an entity.</param>
/// <param name="enumCodeGenerator">A service to generate the code for the enums
/// of an entity.</param>
/// <param name="classDeclarationCodeGenerator">A service to generate the code
/// for the class declaration of an entity.</param>
/// <param name="primaryKeyCodeGenerator">A service to generate the code for the
/// primary key of an entity.</param>
/// <param name="simplePropertyCodeGenerator">A service to generate the code for
/// the simple properties of an entity.</param>
/// <param name="oneToOneReferenceNavigationCodeGenerator">A service to generate
/// the code for the one-to-one reference navigations of a principal entity.</param>
/// <param name="oneToNReferenceNavigationCodeGenerator">A service to generate
/// the code for the one-to-one or one-to-many reference navigations of a
/// dependent entity.</param>
/// <param name="manyToManyReferenceNavigationCodeGenerator">A service to generate
/// the code for the many-to-many reference navigations of a dependent entity.</param>
/// <param name="oneToManyCollectionNavigationCodeGenerator">A service to generate
/// the code for the one-to-many collection navigations of a principal entity.</param>
/// <param name="manyToManyCollectionNavigationCodeGenerator">A service to generate
/// the code for the many-to-many collection navigations of a principal entity.</param>
public class EntityFileGenerator(
    IAppContext appContext,
    IOptions<Options> options,
    ICodeCombiner codeCombiner,
    IFileCreator fileCreator,
    IAutoGeneratedTagCodeGenerator autoGeneratedTagCodeGenerator,
    IEntityDirectiveCodeGenerator directiveCodeGenerator,
    IEntityUsingCodeGenerator usingCodeGenerator,
    IEntityNamespaceCodeGenerator namespaceCodeGenerator,
    IEntityEnumCodeGenerator enumCodeGenerator,
    IEntityClassDeclarationCodeGenerator classDeclarationCodeGenerator,
    IEntityPrimaryKeyCodeGenerator primaryKeyCodeGenerator,
    IEntitySimplePropertyCodeGenerator simplePropertyCodeGenerator,
    IEntityOneToOneReferenceNavigationCodeGenerator oneToOneReferenceNavigationCodeGenerator,
    IEntityOneToNReferenceNavigationCodeGenerator oneToNReferenceNavigationCodeGenerator,
    IEntityManyToManyReferenceNavigationCodeGenerator manyToManyReferenceNavigationCodeGenerator,
    IEntityOneToManyCollectionNavigationCodeGenerator oneToManyCollectionNavigationCodeGenerator,
    IEntityManyToManyCollectionNavigationCodeGenerator manyToManyCollectionNavigationCodeGenerator) :
    IFileGenerator
{
    /// <summary>
    /// Executes the generation of the code files.
    /// </summary>
    public virtual void GenerateFiles()
    {
        appContext.Schema.Entities.ForEach(e =>
        {
            var code = codeCombiner.CombineCode(e,
                autoGeneratedTagCodeGenerator,
                directiveCodeGenerator,
                usingCodeGenerator,
                namespaceCodeGenerator,
                enumCodeGenerator,
                classDeclarationCodeGenerator,
                primaryKeyCodeGenerator,
                simplePropertyCodeGenerator,
                oneToOneReferenceNavigationCodeGenerator,
                oneToNReferenceNavigationCodeGenerator,
                manyToManyReferenceNavigationCodeGenerator,
                oneToManyCollectionNavigationCodeGenerator,
                manyToManyCollectionNavigationCodeGenerator);

            fileCreator.CreateFile(
                options.Value.EntitiesPath, e.Name + ".cs", code);
        });
    }
}
